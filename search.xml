<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java学习记录</title>
      <link href="2021/04/30/java%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>2021/04/30/java%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Java学习记录-一"><a href="#Java学习记录-一" class="headerlink" title="Java学习记录(一)"></a>Java学习记录(一)</h2><h3 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h3><p>强类型语言：</p><ul><li><font color="red">要求变量的使用要严格符合规定，所有变量都必须先定义再使用.</font></li></ul><p>弱类型语言：</p><ul><li>与强类型语言相反。</li></ul><blockquote><p>java的数据类型分为两大类：</p><ul><li><code>基本类型</code><ul><li>数值类型<ul><li>整数类型<ul><li>byte:1个字节的范围：-128~127</li><li>short:2个字节范围：-32768~32767</li><li>int:4个字节范围：-2147483648~2147483647</li><li>long:8个字节范围：太长不想抄，了解就好</li></ul></li><li>浮点类型<ul><li>float:4个字节</li><li>double:8个字节</li></ul></li><li>字符类型<ul><li>char:2个字节</li></ul></li></ul></li><li>boolean类型：占一位，值只有True or False</li></ul></li><li><code>引用类型</code><ul><li>类</li><li>接口</li><li>数组</li></ul></li></ul></blockquote><p>整数拓展：</p><ul><li>二进制：0b</li><li>十进制：</li><li>八进制：0</li><li>十六进制0x</li></ul><p>浮点数拓展：</p><ul><li><font color="red">最好完全避免使用浮点数进行比较</font></li></ul><p>字符拓展：</p><ul><li>所有的字符本质还是数字</li><li>在数字前面使用<code>\u</code>表示这是一串编码</li></ul><h3 id="二、类型转换"><a href="#二、类型转换" class="headerlink" title="二、类型转换"></a>二、类型转换</h3><p>运算中，不同类型的数据要先转换城同一类型，然后进行运算</p><p>各类型的容量</p><blockquote><p>低—————————————————————-&gt;高</p><p><code>byte</code>,<code>short</code>,<code>char</code>–&gt;<code>int</code>–&gt;<code>long</code>–&gt;<code>float</code>–&gt;<code>double</code></p><p><font color="red">注意：小数的优先级比整数要高很多</font></p></blockquote><p>强制类型转换：由高到低的时候需要用到强制转换（可能存在内存溢出的状况）</p><p>自动类型转换：由低到高的时候会自动转换</p><p>注意：</p><blockquote><p>1、不能对布尔值进行转换</p><p>2、不能把对象类型转换为不相干的类型</p><p>3、再把高容量转换低容量的时候，强制转换</p><p>4、转化的时候可能存在内存溢出的情况</p><p>5、小于int的类型相加后结果会自动转换城int</p></blockquote><h3 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h3><p>变量就是可以变化的量</p><p>java中变量是最基础的存储单元，其要素包括变量名，变量类型，作用域</p><h3 id="四、变量的作用域"><a href="#四、变量的作用域" class="headerlink" title="四、变量的作用域"></a>四、变量的作用域</h3><p>类变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a; <span class="comment">//如果不自行初始化，这个类型默认值为 0，0.0。布尔值默认是False 除了基本类型其他都是null</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Test test = <span class="keyword">new</span> Test();</span><br><span class="line">        System.out.println(test.a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>局部变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> a = <span class="number">1</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、常量"><a href="#五、常量" class="headerlink" title="五、常量"></a>五、常量</h3><p>初始化之后就不能改变值。（一种特殊的变量）</p><p>定义：<code>final</code></p><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//修饰符不存在先后顺序</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(PI);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(PI);</span><br></pre></td></tr></table></figure><h3 id="六、命名规则"><a href="#六、命名规则" class="headerlink" title="六、命名规则"></a>六、命名规则</h3><ul><li>所有变量、方法、类名：见名知意</li><li>类成员变量：首字母小写和驼峰原则</li><li>局部变量：首字母小写和驼峰原则</li><li>常量：大写字母和下划线</li><li>类名：首字母大写和驼峰原则</li><li>方法名：首字母小写和驼峰原则</li></ul><h3 id="七、运算符"><a href="#七、运算符" class="headerlink" title="七、运算符"></a>七、运算符</h3><p>算数运算符：<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code>,<code>++</code>,<code>--</code></p><p>赋值运算符：<code>=</code></p><p>关系运算符：<code>&gt;</code>,<code>&lt;</code>,<code>&gt;=</code>,<code>&lt;=</code>,<code>==</code>,<code>!=</code>,<code>instanceof</code></p><p>逻辑运算符：<code>&amp;&amp;</code>,<code>||</code>,<code>!</code></p><p>位运算符：<code>&amp;</code>,<code>|</code>,<code>^</code>,<code>~</code>,<code>&gt;&gt;</code>,<code>&lt;&lt;</code>,<code>&gt;&gt;&gt;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">A = 0011 1100</span></span><br><span class="line"><span class="comment">B = 0000 1101</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">A&amp;B = 0000 1100</span></span><br><span class="line"><span class="comment">A|B = 0011 1101</span></span><br><span class="line"><span class="comment">A^B = 0011 0001</span></span><br><span class="line"><span class="comment">~B = 1111 0010</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>条件运算符：<code>?:</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">String str = a&gt;<span class="number">0</span> ? <span class="string">&quot;正确&quot;</span>:<span class="string">&quot;错误&quot;</span>;</span><br></pre></td></tr></table></figure><p>拓展赋值运算符：<code>+=</code>,<code>-=</code>,<code>*=</code>,<code>/=</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//短路运算</span></span><br><span class="line"><span class="keyword">int</span> c = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">boolean</span> d = (c&lt;<span class="number">4</span>)&amp;&amp;(c++&lt;<span class="number">4</span>);</span><br><span class="line">System.out.println(d);</span><br><span class="line">System.out.println(c); <span class="comment">//c = 5; 也就是说当前面是错的时候，后面的没有执行；</span></span><br></pre></td></tr></table></figure><p>字符串连接符：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>+a+b);<span class="comment">//结果为“12”</span></span><br><span class="line">System.out.println(a+b+<span class="string">&quot;&quot;</span>);<span class="comment">//结果为“3”</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学_2</title>
      <link href="2021/03/05/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6_2/"/>
      <url>2021/03/05/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6_2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="1-2-命题公式"><a href="#1-2-命题公式" class="headerlink" title="1.2 命题公式"></a>1.2 命题公式</h3><ol><li>简单命题的真值是确定的，称为<strong>命题常元（常项）</strong>。</li><li>取值0或1的变元称作<strong>命题变元（变项）</strong>。</li><li>将命题用联结词按照一定逻辑关系联结起来的符号串称为<strong>合式公式</strong>，合式公式定义如下：<ol><li>单个命题变元（或常元）是合式公式，称为<strong>原子命题公式</strong>。</li><li>若$A$是合式公式，则$\neg A$也是。</li><li>若$A, B$是合式公式，则$A\land B, A\lor B, A\to B, A\leftrightarrow B$也是。</li><li>有限次应用1-3形成的符号串是合式公式。</li></ol></li><li>合式公式也称为<strong>命题公式（形式）</strong>，简称为<strong>公式</strong>。</li><li>优先级：$\neg\ &gt;\ \land\ =\ \lor\ &gt;\ \to\ =\ \leftrightarrow$</li><li>设$p_1,p_2,\ldots,p_n$是公式$A$中的全部命题变元，给$p_1,p_2,\ldots,p_n$各指定一个真值，称为对$A$的一个<strong>赋值（解释）</strong>。<ol><li>若$A$在各种赋值中均为真，则称为<strong>重言式（永真式）</strong>。</li><li>若$A$在各种赋值中均为假，则称为<strong>矛盾式（永假式）</strong>。</li><li>若$A$不是矛盾式，则称为<strong>可满足式</strong>。</li></ol></li><li>真值表判断公式类型的原则：<ol><li>若真值表最后一列全为1，则公式为重言式。</li><li>若真值表最后一列全为0，则公式为矛盾式。</li><li>若真值表最后一列至少有一个为1，则公式为可满足式。</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模板</title>
      <link href="2021/03/05/%E6%A8%A1%E6%9D%BF/"/>
      <url>2021/03/05/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学_1</title>
      <link href="2021/03/05/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6_1/"/>
      <url>2021/03/05/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6_1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="1-1-命题与联结词"><a href="#1-1-命题与联结词" class="headerlink" title="1.1 命题与联结词"></a>1.1 命题与联结词</h3><ol><li><p>命题</p><ol><li>非真即假的陈述句称作<strong>命题</strong>。</li><li>不能被分解位更简单的命题称作<strong>简单命题</strong>或<strong>原子命题</strong>。</li><li>由简单命题通过联结词构成的命题称作<strong>复合命题</strong>。</li><li>命题所表达的判断结果称为命题的<strong>真值</strong>。</li><li>一般地，以$p,q,r,\ldots$表示原子命题，以$1$表示命题的真值为真，$0$表示命题的真值为假。</li></ol></li><li><p>联结词</p><ol><li><p>符号$\neg$称作<strong>否定联结词</strong>。</p><ol><li><p>复合命题“非p”称为p的<strong>否定式</strong>，记作$\neg p$。</p></li><li><table><thead><tr><th align="center">$p$</th><th align="center">$\neg p$</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">0</td></tr></tbody></table></li></ol></li><li><p>符号$\land$称作<strong>合取联结词</strong>。</p><ol><li>复合命题“p并且q”称为p与q的<strong>合取式</strong>，记作$\land$。</li><li></li></ol><table><thead><tr><th align="center">$p$</th><th align="center">$q$</th><th align="center">$p\land q$</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr></tbody></table></li><li><p>符号$\lor$称作<strong>析取联结词</strong>。</p><ol><li>复合命题“p或q”称为p与q的<strong>析取式</strong>，记作$\lor$。</li><li></li></ol><table><thead><tr><th align="center">$p$</th><th align="center">$q$</th><th align="center">$p\lor q$</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr></tbody></table></li><li><p>符号$\to$称作<strong>蕴含联结词</strong>。</p><ol><li>复合命题“如果p，则q”称为p与q的<strong>蕴含式</strong>，记作$\to$。</li><li></li></ol><table><thead><tr><th align="center">$p$</th><th align="center">$q$</th><th align="center">$p\to q$</th></tr></thead><tbody><tr><td align="center"><strong>0</strong></td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center"><strong>0</strong></td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center"><strong>1</strong></td><td align="center"><strong>0</strong></td><td align="center"><strong>0</strong></td></tr><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr></tbody></table><ol start="3"><li>可以简单将$\to$类比为$\leq$ </li></ol></li><li><p>符号$\leftrightarrow$称作<strong>等价联结词</strong>。</p><ol><li>复合命题“p当且仅当q”称为p与q的<strong>等价式</strong>，记作$\leftrightarrow$。</li><li></li></ol><table><thead><tr><th align="center">$p$</th><th align="center">$q$</th><th align="center">$p\leftrightarrow q$</th></tr></thead><tbody><tr><td align="center"><strong>0</strong></td><td align="center"><strong>0</strong></td><td align="center"><strong>1</strong></td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center"><strong>1</strong></td><td align="center"><strong>1</strong></td><td align="center"><strong>1</strong></td></tr></tbody></table></li><li><p>总结</p></li></ol><table><thead><tr><th align="center">$p$</th><th align="center">$q$</th><th align="center">$\neg p$</th><th align="center">$p\land q$</th><th align="center">$p\lor q$</th><th align="center">$p\to q$</th><th align="center">$p\leftrightarrow q$</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr></tbody></table></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言的初次接触</title>
      <link href="2021/03/05/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80_1/"/>
      <url>2021/03/05/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80_1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="汇编语言的初次接触"><a href="#汇编语言的初次接触" class="headerlink" title="汇编语言的初次接触"></a>汇编语言的初次接触</h2><h3 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h3><ul><li>汇编语言是<font color="red">低级语言</font></li><li>汇编语言是各种CPU提供的机器指令的助记符集合</li></ul><blockquote><p>问：什么是汇编语言？</p><p>答：充分获得底层编程的体验，深刻理解机器运行程序的机理就是汇编语言</p></blockquote><h3 id="机器语言"><a href="#机器语言" class="headerlink" title="机器语言"></a>机器语言</h3><ul><li>机器指令的集合</li><li>机器指令就是一台机器可以正确执行的命令</li></ul><blockquote><p>问：什么是计算机系统？</p><p>答：由CPU和其他受CPU直接或间接控制的芯片、器件、设备组成的系统</p></blockquote><h3 id="汇编语言的分类"><a href="#汇编语言的分类" class="headerlink" title="汇编语言的分类"></a>汇编语言的分类</h3><h4 id="王爽分类"><a href="#王爽分类" class="headerlink" title="王爽分类"></a>王爽分类</h4><ul><li>汇编指令：机器码的助记符，有对应的机器码</li><li>伪指令：没有对应的机器码，由编译器执行，计算机不执行</li><li>其他符号：如：”+”,”-“,”*”,”/“,由编译器识别，没有对应的机器码</li></ul><h4 id="另外一种分类"><a href="#另外一种分类" class="headerlink" title="另外一种分类"></a>另外一种分类</h4><ul><li>标号域</li><li>操作域</li><li>操作数域</li><li>注释域</li></ul><h3 id="存储单元"><a href="#存储单元" class="headerlink" title="存储单元"></a>存储单元</h3><p>​    存储器被划分成若干个存储单元，每个存储单元从0开始顺序编号</p><ul><li>存储单元可以存8个bit也就是8位二进制数，即一个字节Byte</li><li>存储单元的容量是以字节为最小单位进行运算的</li></ul><h3 id="CPU对存储器的读写"><a href="#CPU对存储器的读写" class="headerlink" title="CPU对存储器的读写"></a>CPU对存储器的读写</h3><ul><li>存储单元的地址（地址信息）</li><li>器件的选择，度或者写的命令（控制信息）</li><li>读或写的数据（数据信息）</li></ul><h3 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h3><p>​    在计算机中有专门连接CPU和其他芯片的导线，通常称为总线，从物理上讲总线就是一根根导线的集合。</p><p>但是根据传送信息上不同从逻辑上又分为三类</p><h4 id="地址总线"><a href="#地址总线" class="headerlink" title="地址总线"></a>地址总线</h4><ul><li>一个CPU有N根地址线，则可以说地址总线宽度为N，这样的CPU最多可以寻找2的N次方个内存单元</li><li>内存单元的单位是bit</li></ul><h4 id="数据总线"><a href="#数据总线" class="headerlink" title="数据总线"></a>数据总线</h4><ul><li>数据总线的宽度决定了CPU和外界的数据传输速度，8根数据总线一次可以传送8bit(一个Byte),16根是两个</li></ul><h4 id="控制总线"><a href="#控制总线" class="headerlink" title="控制总线"></a>控制总线</h4><ul><li>控制总线决定了CPU对外部器件的控制能力</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><code>汇编指令</code>是<code>机器指令</code>的助记符，同<code>机器指令</code>一一对应</li><li>每一种CPU都有自己的<code>汇编指令</code>集</li><li>CPU可以直接使用的信息存储在存储器（在一定意义上存储器就是内存。）</li><li>在存储器中数据与指令没有任何区别都是二进制信息</li><li>存储单元从零开始编号</li><li>一个存储单元可以存8个bit，即8位二进制数，也就是一个字节Byte</li><li>1Byte = 8bit、1KB = 1024Byte、1MB = 1024KB、1GB = 1024MB</li><li>内存单元是以bit为单位</li><li>存储单元是以Byte为单位</li><li>每一个CPU芯片都有许多管脚，这些管脚与总线相连。也就是说这些管脚引出总线。一个CPU引出3种总线的宽度代表这个CPU不同方面的性能<ul><li>地址总线的宽度决定了CPU的寻址能力</li><li>数据总线的宽度决定了CPU与其他器件进行数据传送时的一次数据传送量</li><li>控制总线的宽度决定了CPU对系统中的其他器件控制能力</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编语言 </tag>
            
            <tag> CPU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/21/hello-world/"/>
      <url>2021/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
